name: Publish Helm Charts

on:
  push:
    branches:
      - main
      - feature/initial-exploration

jobs:
  build-and-publish:
    name: Build and Publish Helm Chart
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart:
          - base-nginx

    env:
      registry: ghcr.io
      gcr_image: ghcr.io/${{ github.repository }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install helm
        uses: Azure/setup-helm@v3

      - name: Login to Helm Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.registry }} --username ${{ github.actor }} --password-stdin

      - name: Short Sha
        id: short
        uses: lockerstock/github-actions/get-short-sha@main

      - name: Get Chart Version
        id: current
        run: echo "version=$(yq '.version' charts/${{ matrix.chart }}/Chart.yaml)" >> "$GITHUB_OUTPUT"

      - name: Create Chart Version
        id: chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION_EXISTS=$(gh api \
            /orgs/${{ github.repository_owner }}/packages/container/${GITHUB_REPOSITORY##*/}%2F${{ matrix.chart }}/versions \
            --jq 'map(.metadata.container.tags | any(. == "${{ steps.current.outputs.version }}")) | any')

          if [ "$VERSION_EXISTS" = true ]; then
            echo "version=${{ steps.current.outputs.version }}-${{ steps.short.outputs.short_sha }}" >> "$GITHUB_OUTPUT"
          else 
            echo "version=${{ steps.current.outputs.version }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Update versions
        run: yq --inplace '.version = "${{ steps.chart.outputs.version }}"' Chart.yaml
        working-directory: ./charts/${{ matrix.chart }}

      - name: Package Helm Chart
        run: helm package ./charts/${{ matrix.chart }}

      - name: Publish Chart to Container Registry
        run: helm push ${{ matrix.chart }}-${{ steps.chart.outputs.version }}.tgz oci://${{ env.gcr_image }}
