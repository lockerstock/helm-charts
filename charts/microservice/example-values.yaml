# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

environment: staging

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.23-alpine"

imagePullSecrets: 
  - name: image-pull-secret

service:
  annotations:
    something: different
  type: ClusterIP
  port: 80
  portName: http

ingressRoute:
  enabled: true
  hostname: 'example.com'
  annotations: 
    something: else
  rules:
    - Headers: # Map of key value pairs to match Headers on
        'X-Something': else 
        'X-Another': thing 
      HeadersRegexp: # Map of key value pairs to regex match Headers on
        'X-Regex': 'else*'
        'X-Regex-Too': 'different*'
      Methods: 
        - GET
        - POST
      Paths: 
        - /path/to/resource
        - /path/to/different/resource
      PathPrefixes: # Array of "Regexp Syntax" paths to match on
        - /other/resources
        - /others
      Queries: # Map of key value pairs to match Query parameters on
        page: 1
        per_page: 10
      ClientIPs: # Map of ClientIPs to match on
        - '::1'
        - '10.0.0.1'
    - Paths:
        - /path/to/my/resource

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

deployment:
  # container:
    # args: ["start"]

  database:
    mongo:
      # Enabling MongoDB below will spin up extra resources to facilitate standard connection to a MongoDB Atlas instance.
      # This includes an ExternalSecret to retrieve the MongoDB connection string and environment variables for the deployment to allow the application to connect to it.
      enabled: false
  
  cache:
    enabled: false

  auth0:
    # Enabling MongoDB below will spin up extra resources to facilitate standard connection to a Auth0 application instance.
    # This includes an ExternalSecret to retrieve the Auth0 secrets and environment variables for the deployment to allow the application to connect to it.
    enabled: false

  open-telemetry:
    # Enabling OpenTelemetry below will provide the internal URL environment variable to the deployment for the application to send traces to.
    enabled: false

  config:
    # Log level (trace, debug, info, warn, error)
    LOG_LEVEL: 'trace'

    # Log format (plain, json)
    LOG_FORMAT: 'json'

    # Go env (development, production)
    GO_ENV: development

    # Gin env (debug, test, release)
    GIN_MODE: debug

  # Custom env objects will be inserted into the deployment verbatim and should be provided in standard Kubernetes format
  # https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container
  env:
    - name: SESSION_API_ADDRESS
      value: http://session-api

    - name: PROFILES_API_ADDRESS
      value: http://profiles-api

  probes:
    liveness: 
      httpGet:
        path: /
        port: http
    readiness: 
      httpGet:
        path: /
        port: http
