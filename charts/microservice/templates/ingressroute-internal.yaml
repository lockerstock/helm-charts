{{- if .Values.internalIngressRoute.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: internalIngressRoute
metadata:
  name: '{{ .Release.Name }}-internal'
  labels:
    {{- include "microservice.labels" . | nindent 4 }}
  annotations:
    {{- if eq .Values.environment "staging" }}
    kube-external-sync.io/replicate-to-matching: lockerstock/feature-branch,!lockerstock/{{ .Release.Name }}
    {{- end }}
    {{- with .Values.internalIngressRoute.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  entryPoints: 
    - web
  routes:
    {{ if len .Values.internalIngressRoute.rules }}
    - kind: Rule
      match: >
        Host(`{{ .Values.internalIngressRoute.hostname }}`) && (
          {{- $lastIndex := sub (len .Values.internalIngressRoute.rules) 1 -}}
          {{- $rulesLength := len .Values.internalIngressRoute.rules -}}
          {{- range $ruleIndex, $rule := .Values.internalIngressRoute.rules }}
            {{- if gt $rulesLength 1 }} ( {{- end }}

              {{- if not (empty $rule.Headers) }}
                ({{ range $index, $key := keys $rule.Headers }} Headers(`{{ $key }}`,`{{ index $rule.Headers $key }}`) {{ if lt (add 1 $index) (len $rule.Headers) }}&&{{- end }} {{- end }})
                {{- if or (not (empty $rule.HeadersRegexp)) (not (empty $rule.Methods)) (not (empty $rule.Paths)) (not (empty $rule.PathPrefixes)) (not (empty $rule.Queries)) (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.HeadersRegexp) }}
                ({{ range $index, $key := keys $rule.HeadersRegexp }} HeadersRegexp(`{{ $key }}`,`{{ index $rule.HeadersRegexp $key }}`) {{ if lt (add 1 $index) (len $rule.HeadersRegexp) }}&&{{- end }} {{- end }})
                {{- if or (not (empty $rule.Methods)) (not (empty $rule.Paths)) (not (empty $rule.PathPrefixes)) (not (empty $rule.Queries)) (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.Methods) }}
                Method({{- range $index, $method := $rule.Methods }}`{{ $method }}`{{ if lt (add 1 $index) (len $rule.Methods) }},{{- end }}{{- end }})
                {{- if or (not (empty $rule.Paths)) (not (empty $rule.PathPrefixes)) (not (empty $rule.Queries)) (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.Paths) }}
                Path({{- range $index, $path := $rule.Paths }}`{{ $path }}`{{ if lt (add 1 $index) (len $rule.Paths) }},{{- end }}{{- end }})
                {{- if or (not (empty $rule.PathPrefixes)) (not (empty $rule.Queries)) (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.PathPrefixes) }}
                PathPrefix({{- range $index, $pathPrefix := $rule.PathPrefixes }}`{{ $pathPrefix }}`{{ if lt (add 1 $index) (len $rule.PathPrefixes) }},{{- end }}{{- end }})
                {{- if or (not (empty $rule.Queries)) (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.Queries) }}
                Query({{ range $index, $key := keys $rule.Queries }}`{{ $key }}={{ index $rule.Queries $key }}`{{ if lt (add 1 $index) (len $rule.Queries) }},{{- end }} {{- end }})
                {{- if or (not (empty $rule.ClientIPs)) }}&&{{- end }}
              {{- end }}

              {{- if not (empty $rule.ClientIPs) }}
                ClientIP({{- range $index, $clientIP := $rule.ClientIPs }}`{{ $clientIP }}`{{ if lt (add 1 $index) (len $rule.ClientIPs) }},{{- end }}{{- end }})
              {{- end }}

            {{- if gt $rulesLength 1 }} ) {{- end }}
            {{- if lt $ruleIndex $lastIndex }}||{{- end }}
          {{- end }} ) 

      {{- if len .Values.internalIngressRoute.middlewares }}
      middlewares:
        {{- range .Values.internalIngressRoute.middlewares }}
        - name: {{ .name }}
          namespace: '{{ if eq $.Values.environment "production" }}production{{ else }}staging{{ end }}'
        {{- end }}
      {{- end }}

      services:
        - kind: Service
          name: {{ .Release.Name }}
          namespace: {{ .Release.Namespace }}
          port: {{ .Values.service.port }}
    {{- end }}
{{- end }}
